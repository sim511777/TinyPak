1. 파일 정보를 읽어온다.
2. 파일 트리를 읽어온다.
3. 이름데이터들을 읽어온다.
4. 파일데이터들을 읽어와서 해당 폴더를 생성하고 파일을 생성해서 쓴다.

1. 파일 정보를 쓴다.
2. 파일 트리를 생성한다. 이름도 읽어온다.
3. 파일 트리를 쓴다. 이름 옵셋과 사이즈도 쓴다.
4. 이름들을 쓴다.
5. 파일을 읽어와서 쓴다.

프로그램 이름 : TinyPak
목적 : 연습용 파일 압축 프로그램
기능 : 파일 리스트를 압축하여 한개의 파일로 만들고 만들어진 파일을 지정된 폴더에 푸는 프로그램

## 무엇을 연습 할거냐
- 파일 시스템 인코딩/디코딩
- thread, task, async/await

## 기본 UI
- 프로그램을 실행하면 폼위에 버튼 두가 압축하기, 압축풀기
 - 압추하기 버튼을 누르면 새 폼이 뜨고 파일 리스트를 편집할수 있는 기능이 됨
  - 파일 리스트에는 폴더와, 파일을 추가할 수 있음
  - 중복 항목 제거 기능 필요
  - 확인 버튼을 누르면 파일 하나로 압축함
 - 압축풀기 버튼을 누르면 파일 Open대화상자가 뜨고 단일파일 선택 함
  - 파일 선택 하고 확인 버튼 누르면 탐색기 형태로 나타남
  - 폴더 선택하여 풀기, 현재폴더에 풀기, 파일명으로 하위폴더 만들어서 풀기, 알아서 풀기

## 기능
- 나중에 쓰레드로 비동기 처리, 진행상태, 중지기능 필요
 - task로 변환
 - async/awit로 변환

- 폴더선택 대화상자는 .net 기본거 쓰지 말고 WindowsAPICodePack거 사용하는거 원복, 파일과 폴더를 같이 선택하는 방법 필요
- 압축시 폴더와 파일 같이 선택하는 방법 필요

ok - 하위 폴더 하나의 데이터 덩어리를 때어놓아도 가능 하도록 함
- 압축파일에서 일부 파일만 푸는 기능 필요


ok - 바이트 배열 인코딩을 스트림 인코딩으로 변경

- 폴더 구조를 읽어서 트리 구조를 메모리에 생성하고 앞부분에 먼저 기록
- 그다음에 이름 버퍼 기록
- 그다음에 데이터 파일 버퍼 기록
- 데이터 옵셋은 스트림 시작 기준 옵셋
- 장점 : 구조를 읽기가 쉬움
- 단점 : 폴더 단위 데이터가 유지되지 않음

- 기존 방법
- 장점 : 폴더 단위 데이터가 유지됨
- 단점 : 구조를 읽기가 복잡함

## Error
- 파일시간 보존이 안됨, 인코딩 문제인지, 디코딩 문제인지 알수가 없음

파일 구조 변경
폴더구조를 앞부분에 몰아넣고
그다음에 string list
그다음에 file data list
파일 헤더에 magic no (file signature) 추가
파일 포멧 버전도 추가, 압축옵션도 추가
파일 유효성을 체크할수 있는 방법 추가
